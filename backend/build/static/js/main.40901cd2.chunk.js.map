{"version":3,"sources":["assets/virtual-shelf.png","config/route-config.ts","context/global/films/films_actions.ts","components/films/AccordionList.tsx","services/baseRequestService.ts","components/films/FilmCard.tsx","components/films/CustomList.tsx","components/films/Films.tsx","components/app/Routes.tsx","config/style-config.ts","context/global/films/films_reducer.ts","context/global/global-reducer.ts","context/global/GlobalContext.ts","context/global/GlobalContextProvider.tsx","components/app/App.tsx","index.tsx"],"names":["module","exports","RoutePath","FilmsActionType","useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","AccordionList","data","classes","React","useState","setExpanded","className","data-testid","map","item","Accordion","onChange","panel","url","event","isExpanded","style","padding","AccordionSummary","expandIcon","aria-controls","id","Typography","title","AccordionDetails","Container","variant","component","genre","createdAt","shelf","name","parseParams","params","keys","Object","options","forEach","key","isParamTypeObject","isParamTypeArray","length","element","slice","baseRequestService","endpoint","a","method","Promise","reject","axios","then","response","console","log","maxWidth","marginTop","border","borderRadius","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","FilmCard","film","setErrors","bookGenres","expanded","people","setPeople","loading","setLoading","newBookTitle","setNewBookTitle","newBookGenre","setNewBookGenre","setBooks","handleExpandClick","handleGetBooks","returnedBooks","filter","book","message","handleCreateNewBook","newBook","shelfId","headers","createdBook","newBooksReturned","books","Card","CardHeader","action","IconButton","aria-label","subheader","description","CardContent","Grid","TextField","value","target","Select","labelId","label","MenuItem","Button","onClick","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","LinearProgress","paragraph","container","linearProgress","CustomList","selectedFilms","justify","fixed","wrap","alignItems","direction","flexGrow","img","flex","modal","position","top","left","backgroundColor","Films","errors","shelves","setShelves","setBookGenres","newShelfName","setNewShelfName","newShelfDescription","setNewShelfDescription","open","setOpen","useEffect","getGenres","getFilmsByName","createShelf","newShelf","genres","handleNewShelf","handleCreateNewShelf","Modal","onClose","aria-labelledby","aria-describedby","Box","sm","xs","alignContent","src","logo","alt","Autocomplete","multiple","newValue","handleAutoComplete","getOptionLabel","option","renderTags","tagValue","getTagProps","index","Chip","minWidth","renderInput","placeholder","join","size","err","severity","Routes","exact","path","Index","to","Colors","Fonts","FontWeight","Breakpoints","filmsReducer","state","type","ADD_FILMS","films","payload","initialState","globalReducer","GlobalContext","createContext","dispatch","GlobalContextProvider","props","useReducer","Provider","children","appTheme","fontFamily","FONT_FAMILY","fontWeightMedium","MEDIUM","body2","background","default","primary","main","PRIMARY_MAIN_COLOR","dark","PRIMARY_DARK_COLOR","SUCCESS_COLOR","error","ERROR_MAIN_COLOR","breakpoints","values","XS","SM","md","MD","lg","LG","xl","XL","createMuiTheme","App","window","renderEpam","containerId","elem","document","getElementById","ReactDOM","render","unmountEpam","unmountComponentAtNode","isRenderedByContainer"],"mappings":"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","file":"static/js/main.40901cd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/virtual-shelf.cec30e7e.png\";","export enum RoutePath {\n  Index = '/',\n  Films = '/films'\n}","\nimport { Film } from 'domain/Film';\nimport { Action } from '../../Action';\n\nexport enum FilmsActionType {\n  ADD_FILMS = 'ADD_FILMS'\n}\n\nexport interface AddFilmsAction extends Action {\n  type: FilmsActionType.ADD_FILMS,\n  payload: {\n    films: Film[]\n  }\n}\n\nconst addFilmsAction = (\n  films: Film[]\n): AddFilmsAction => ({\n  type: FilmsActionType.ADD_FILMS,\n  payload: {\n    films\n  }\n})\n\nexport type FilmsAction = AddFilmsAction\n\nexport {\n  addFilmsAction\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Container } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport const accordionsTestId = 'accordionsTestId'\n\nexport const AccordionList = ({data}: {\n  data: any[]\n}) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel: any) => (event: any, isExpanded: boolean) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root} data-testid=\"accordionsTestId\">\n     {data.map((item: any) =>  <Accordion  onChange={handleChange(item.url)}\n     style={{padding: 10}}\n     >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography className={classes.heading} color=\"primary\">{item.title}</Typography>\n          {/* <Typography className={classes.secondaryHeading}>{item.gender}</Typography> */}\n        </AccordionSummary>\n        <AccordionDetails>\n       <Container >\n       <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n         Title: {item.title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n         Genre: {item.genre}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        CreatedAt: {item.createdAt}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n         Shelf: {item.shelf.name}\n        </Typography>\n       </Container>\n        </AccordionDetails>\n      </Accordion>)}\n    </div>\n  );\n}","import axios, { AxiosRequestConfig } from 'axios';\n\nconst parseParams = (params: any) => {\n  const keys = Object.keys(params);\n  let options = '';\n\n  keys.forEach((key) => {\n    const isParamTypeObject = typeof params[key] === 'object';\n    const isParamTypeArray = isParamTypeObject && (params[key].length >= 0);\n\n    if (!isParamTypeObject) {\n      options += `${key}=${params[key]}&`;\n    }\n\n    if (isParamTypeObject && isParamTypeArray) {      \n      params[key].forEach((element: any) => {\n        options += `${key}=${element}&`;\n      });\n    }\n  });\n\n  return options ? options.slice(0, -1) : options;\n};\n\nconst baseRequestService = async (\n  endpoint: string,\n  options: AxiosRequestConfig\n): Promise<any> => {\n    try {\n      if (!endpoint || !options?.method) {\n        return Promise.reject(\"Please enter endpoint\")\n      };\n\n      if (options.method === 'GET') {\n\n        options['paramsSerializer'] = params => {\n          return  parseParams(params)\n        }\n      }\n\n      return axios(endpoint, options).then(response=> {\n        return response.data\n      })\n    } catch (err) {\n      \n      console.log('err', err)\n      return Promise.reject(err);\n    }\n \n};\n\nexport {\n  baseRequestService\n};\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MovieFilter from '@material-ui/icons/MovieFilter';\nimport FaceIcon from '@material-ui/icons/Face';\nimport { Character, Film } from './../../domain/Film'\nimport lightSaber from 'assets/lightsaber_2.png'\nimport glow from 'assets/glow.png'\nimport ApiFactory from 'services/swapi-api';\nimport { Button, Grid, LinearProgress, MenuItem, Select, TextField } from '@material-ui/core';\nimport { AccordionList } from 'components/films/AccordionList'\nimport { BasicError } from 'domain/Global';\nimport { baseRequestService } from 'services/baseRequestService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    padding: 20,\n    marginTop: 25,\n    border: '1px solid #70B8FF',\n    borderRadius: 20\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(10deg)',\n  }\n}));\n\n\nexport const FilmCard = ({film, setErrors, bookGenres}: any) => {\n  console.log(bookGenres,'book GENRES')\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const [people, setPeople] = React.useState<Character[]>();\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  const [newBookTitle, setNewBookTitle] = useState('');\n  const [newBookGenre, setNewBookGenre] = useState('');\n\n  const [books, setBooks] = useState([]);\n  \n  const handleExpandClick = async () => {\n    setExpanded(!expanded);\n    try {\n      if (!people) {\n        setLoading(true)\n        const returnedBooks = await handleGetBooks()\n        console.log(returnedBooks)\n        // let characters = film.characters.map((item: any) => item.split('/')[5]);\n        // let promises = characters.map((character: any) => ApiFactory.getPeople(character))\n        // characters = await Promise.all(promises)\n        setLoading(false)\n        setPeople(returnedBooks.filter((book: any) => book.shelf.id === film.id))\n        // console.log(characters)\n        // characters = characters\n        // let people = await ApiFactory.getPeople()\n      }\n    } catch (err) {\n      setLoading(false)\n      setErrors([{\n        message: \"Something went wrong, please try again\"\n      }])\n    }\n  };\n\n  const handleCreateNewBook = async (event: any) => {\n    try {\n      console.log(newBookGenre, newBookTitle,'asd')\n\n    const newBook = {\n      shelfId: film.id,\n      title: newBookTitle,\n      genre: newBookGenre\n    }\n\n    let createdBook = await baseRequestService(`https://examen-andreea-react-node.herokuapp.com/api/book/`, { method: 'POST', headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n      }, data: newBook })\n\n      console.log(createdBook)\n\n      const newBooksReturned = await handleGetBooks();\n      setPeople(newBooksReturned.filter((book: any) => book.shelf.id === film.id))\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleGetBooks = async () => {\n    try {\n    const books = await baseRequestService(`https://examen-andreea-react-node.herokuapp.com/api/book/`, { method: 'GET', headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n      }})\n\n      console.log(books,'books are')\n      setBooks(books);\n      return books;\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n  if (!film) return <></>\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        action={\n          <IconButton aria-label=\"settings\">\n            <MovieFilter />\n          </IconButton>\n        }\n        title={`Shelf Name: ${film.name}`}\n        subheader={`Shelf Description: ${film.description}`}\n      />\n      \n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n       Create New Book\n        </Typography>\n\n        <Grid>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Title: \n          </Typography>\n          <TextField variant=\"outlined\" name=\"newBookTitle\" value={newBookTitle} onChange={(event) => setNewBookTitle(event.target.value)} />\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Genre:\n          </Typography>\n                  <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={newBookGenre}\n            label=\"Age\"\n            onChange={(event: any) => {\n              setNewBookGenre(event?.target?.value)\n            }}\n          >\n            {bookGenres && bookGenres.map((genre: any) => <MenuItem value={genre}>{genre}</MenuItem>)}\n          </Select>\n          \n          </Grid>\n          \n          <Button variant=\"outlined\" onClick={handleCreateNewBook} style={{ marginTop: 20 }}> Create Book in {film.name} shelf </Button>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <Typography>\n           Get books\n          </Typography>\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          {loading ? <LinearProgress color=\"primary\" /> : <div>\n          <Typography paragraph>Method:</Typography>\n          <AccordionList data={people || []} />\n          </div>}\n          \n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { Container, Grid, LinearProgress, makeStyles, Typography } from '@material-ui/core';\nimport { Film } from 'domain/Film';\nimport { FilmCard } from './FilmCard'\nimport { BasicError } from 'domain/Global';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: 10\n  },\n  linearProgress: {\n    width: '70%'\n  }\n}));\n\nexport const CustomList = ({\n  loading,\n  selectedFilms,\n  bookGenres,\n  setErrors\n}: any) => {\n  const classes = useStyles();\n\n  if (loading) return (\n    <Grid container justify=\"center\" className={classes.container}>\n      <LinearProgress className={classes.linearProgress} />\n      <LinearProgress color=\"primary\" className={classes.linearProgress} />\n    </Grid>\n  )\n\n  return (\n    <Container fixed>\n\n      <Grid\n        item\n        container\n        wrap=\"wrap\"\n        justify=\"space-around\"\n        alignItems=\"center\"\n        direction=\"row\"\n        // xs={12}\n        style={{\n          padding: 20\n        }}\n      >\n        {selectedFilms.map((film: Film) => <FilmCard\n          setErrors={setErrors}\n          film={film}\n          bookGenres={bookGenres}\n        />)}\n      </Grid>\n\n\n\n    </Container>\n  )\n\n}\n","import React, { useState, useEffect } from 'react';\n\nimport { Box, Button, Chip, Container, Grid, IconButton, makeStyles, Modal, TextField, Typography } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ApiFactory from '../../services/swapi-api';\nimport { BasicError } from 'domain/Global'\nimport { useGlobalContext } from 'context/global/GlobalContext';\nimport { addFilmsAction } from 'context/global/films/films_actions';\nimport logo from '../../assets/virtual-shelf.png'\nimport { CustomList } from './CustomList';\nimport { Film } from 'domain/Film';\nimport Alert from '@material-ui/lab/Alert/Alert';\nimport { baseRequestService } from 'services/baseRequestService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    marginTop: 10\n  },\n\n  img: {\n    flex: 1,\n    padding: 5,\n    maxWidth: '100%'\n  },\n  linearProgress: {\n    width: '70%'\n  },\n  modal: {\n    position: 'absolute',\n    top: '20%',\n    left: '40%',\n    border: '2px solid #000',\n    backgroundColor: 'white',\n    padding: 40\n  }\n}));\n\n\n\nexport const Films = () => {\n  const classes = useStyles();\n  \n  const [errors, setErrors] = useState<BasicError[]>()\n  const [loading, setLoading] = useState<boolean>(false)\n  const [selectedFilms, setSelectedFilms] = useState<Film[]>()\n  const [shelves, setShelves] = useState([]);\n  const [bookGenres, setBookGenres] = useState([]);\n\n  const [newShelfName, setNewShelfName] = useState('');\n  const [newShelfDescription, setNewShelfDescription] = useState('');\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  useEffect(() => {\n    getGenres()\n  }, [])\n\n  const getFilmsByName = async (name: string) => {\n    try {\n      setLoading(true)\n      let shelves = await baseRequestService(`https://examen-andreea-react-node.herokuapp.com/api/shelf/name/${name}`, { method: 'GET', headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n      }} )\n      console.log(shelves,'shelvees');\n      setShelves(shelves)\n      setLoading(false)\n    } catch (err) {\n      setErrors([{\n        message: 'Something went wrong, please try again'\n      }])\n    }\n  }\n\n  const createShelf = async () => {\n    try {\n      setLoading(true)\n      let newShelf = await baseRequestService(`https://examen-andreea-react-node.herokuapp.com/api/shelf/`, { method: 'POST', headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n      }, data: {\n        name: newShelfName,\n        description: newShelfDescription\n      }})\n\n      console.log(newShelf)\n      setLoading(false)\n    } catch (err) {\n      setErrors([{\n        message: 'Something went wrong, please try again'\n      }])\n    }\n  }\n\n  const getGenres = async () => {\n    try {\n      setLoading(true)\n      let genres = await baseRequestService(`https://examen-andreea-react-node.herokuapp.com/api/book/genres`, { method: 'GET', headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n      }})\n\n      setBookGenres(genres)\n      console.log(genres)\n      setLoading(false)\n    } catch (err) {\n      setErrors([{\n        message: 'Something went wrong, please try again'\n      }])\n    }\n  }\n\n \n  const handleAutoComplete = (newValue: any[]) => {\n    console.log(newValue)\n    // setSelectedFilms(newValue)\n  }\n\n  const handleSearch = (name: string) => {\n    console.log(name)\n    getFilmsByName(name)\n  }\n\n  const handleNewShelf = (event: any) => {\n    const { name, value } = event.target;\n\n    if (name === 'newShelfName') setNewShelfName(value)\n    if (name === 'newShelfDescription') setNewShelfDescription(value)\n  }\n\n  const handleCreateNewShelf = async () => {\n    console.log('am apasat', newShelfDescription, newShelfName)\n    await createShelf()\n    setNewShelfName('')\n    setNewShelfDescription('')\n  }\n\n  return (\n    <div>\n      <Container >\n      <Button onClick={handleOpen}>Create New Shelf</Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box className={classes.modal}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Create New Shelf\n          </Typography>\n\n          <Grid>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Name: \n          </Typography>\n          <TextField variant=\"outlined\" name=\"newShelfName\" value={newShelfName} onChange={handleNewShelf} />\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Description:\n          </Typography>\n          <TextField variant=\"outlined\" name=\"newShelfDescription\" value={newShelfDescription} onChange={handleNewShelf} />\n          \n          </Grid>\n          \n          <Button variant=\"outlined\" onClick={handleCreateNewShelf} style={{ marginTop: 20 }}> Create </Button>\n        </Box>\n      </Modal>\n        <Grid\n          container\n          justify=\"space-around\"\n          item sm\n          xs={12}\n          alignContent=\"center\"\n          alignItems=\"center\"\n        >\n          <img src={logo} className={classes.img} alt=\"logo\" />\n          <Autocomplete\n            multiple\n            id=\"fixed-tags-demo\"\n            // value={films || []}\n            onChange={(event, newValue) => handleAutoComplete(newValue)}\n            options={shelves}\n            getOptionLabel={(option) => option['name']!}\n            renderTags={(tagValue, getTagProps) =>\n              tagValue.map((option, index) => (\n                <Chip\n                  label={option['name']}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            style={{ minWidth: '50vw' }}\n            renderInput={(params) => (\n              <form>\n                <TextField\n                  {...params}\n                  id=\"filled-basic\"\n                  label=\"Search for a shelf\"\n                  variant=\"outlined\"\n                  placeholder={`Search for a shelf`} \n                  onChange={(event) => handleSearch(event.target.value)}\n                  />\n              </form>\n            )}\n          />\n        </Grid>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Available book genres: {bookGenres.join(', ')}\n          </Typography>\n        <Grid\n          container\n          justify=\"center\"\n          item sm\n          xs={12}\n          alignContent=\"center\"\n          alignItems=\"center\"\n        >\n          <div>\n            {errors && errors.map((item: BasicError) => (\n              <Alert\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setErrors([...errors.filter((err: BasicError) => item.message !== err.message)]);\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n                severity=\"error\">{item.message} </Alert>\n            ))}\n          </div>\n        </Grid>\n\n        <CustomList\n          loading={loading}\n          selectedFilms={shelves || []}\n          bookGenres={bookGenres}\n          setErrors={(errors: BasicError[]) => setErrors(errors)}\n        />\n      </Container>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { RoutePath } from '../../config/route-config';\nimport { Films } from 'components/films/Films'\n\nexport const routesTestId = 'RoutesComponent';\n\nexport const Routes = () => (\n  <div data-testid={routesTestId}>\n    <Switch>\n      <Route exact path={RoutePath.Index}>\n        <Films/>\n      </Route>\n\n      <Route path={RoutePath.Index}>\n        <Redirect to={RoutePath.Index}/>\n      </Route>\n    </Switch>\n  </div>\n);\n","export enum Colors {\n  PRIMARY_MAIN_COLOR = '#0f99d6',\n  PRIMARY_DARK_COLOR = '#034694',\n  SUCCESS_COLOR = '#8dc63f',\n  ERROR_MAIN_COLOR = '#ff0000',\n  SWITCH_LIGHT_BLUE = '#cfebf7',\n  SWITCH_LIGHT_GREY = '#b0b0b0',\n  SWITCH_DISABLED_GREY = '#efefef',\n  SWITCH_DARK_GREY = '#505050',\n  BLACK_MEDIUM = 'rgba(0, 0, 0, 0.8)',\n  WHITE = '#fff',\n  BLACK = '#000',\n  CARD_BORDER = '#f0f0f0'\n}\n\nexport enum Fonts {\n  FONT_FAMILY = '\"Open Sans\", \"Helvetica\", \"Arial\", sans-serif'\n}\nexport enum FontWeight {\n  MEDIUM = 600\n}\n\nexport enum Breakpoints {\n  XS = 0,\n  SM = 576,\n  MD = 768,\n  LG = 992,\n  XL = 1200\n}\n\nexport const appTheme = {\n  typography: {\n    fontFamily: Fonts.FONT_FAMILY,\n    fontWeightMedium: FontWeight.MEDIUM,\n    body2: {\n      fontSize: '0.75rem'\n    }\n  },\n  palette: {\n    background: {\n      default: '#ebeded',\n    },\n    primary: {\n      main: Colors.PRIMARY_MAIN_COLOR,\n      dark: Colors.PRIMARY_DARK_COLOR\n    },\n    secondary: {\n      main: Colors.SUCCESS_COLOR\n    },\n    error: {\n      main: Colors.ERROR_MAIN_COLOR\n    }\n  },\n  breakpoints: {\n    values: {\n      xs: Breakpoints.XS,\n      sm: Breakpoints.SM,\n      md: Breakpoints.MD,\n      lg: Breakpoints.LG,\n      xl: Breakpoints.XL\n    }\n  }\n};\n","import { Film } from 'domain/Film';\nimport { FilmsAction, FilmsActionType } from './films_actions';\n\nexport interface FilmState {\n  films: Film[]\n};\n\nexport const filmsInitialState: FilmState = {\n  films: []\n};\n\nexport const filmsReducer = (\n  state: FilmState,\n  action: FilmsAction\n): FilmState => {\n  switch (action.type) {\n    case FilmsActionType.ADD_FILMS:\n      return {\n        films: action.payload.films\n      };\n    default:\n      return state;\n  }\n}","import { AnyAction } from '../AnyAction';\nimport { filmsInitialState, filmsReducer, FilmState} from './films/films_reducer';\n\nexport interface GlobalState {\n  film: FilmState\n}\n\nexport const initialState: GlobalState = {\n  film: filmsInitialState\n};\n\nexport const globalReducer = (\n  state: GlobalState,\n  action: AnyAction\n) : GlobalState => {\n  const { film } = state;\n\n  return {\n    film: filmsReducer(film, action)\n  }\n};\n","import { createContext, Dispatch, useContext } from 'react';\n\nimport { GlobalState, initialState} from './global-reducer';\nimport { Action } from '../Action';\n\nexport interface GlobalContextValue extends GlobalState {\n  dispatch: Dispatch<Action>\n};\n\nexport const GlobalContext = createContext<GlobalContextValue>({\n  ...initialState,\n  dispatch: () => {}\n});\n\nexport const useGlobalContext = (): GlobalContextValue =>\n  useContext(GlobalContext);\n","import React, { useReducer, ReactNode } from 'react';\n\nimport { globalReducer, GlobalState, initialState } from './global-reducer';\nimport { GlobalContext } from './GlobalContext';\n\nexport const GlobalContextProvider = (props: { children: ReactNode }) => {\n  const [state, dispatch]: [GlobalState, any]= useReducer(globalReducer, initialState);\n\n  return (\n    <GlobalContext.Provider value={{ ...state, dispatch }}>\n      {props.children}\n    </GlobalContext.Provider>\n  )\n};","import React from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { Routes } from './Routes';\nimport { GlobalContextProvider } from 'context/global/GlobalContextProvider';\nimport { appTheme } from 'config/style-config';\n\nconst theme = createMuiTheme(appTheme);\n\nexport const appTestId = 'AppComponent';\n\nexport const App = (props: any) => {\n  return (\n    <div className=\"App\"  data-testid={appTestId}>\n        <MuiThemeProvider theme={theme}>\n          <BrowserRouter >\n            <GlobalContextProvider>\n              <Routes />\n            </GlobalContextProvider>\n          </BrowserRouter>\n        </MuiThemeProvider>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/app/App';\n\nwindow.renderEpam = (containerId: string) => {\n  const elem = document.getElementById(containerId);\n\n  if (elem) {\n    ReactDOM.render(<App/>, elem);\n  }\n};\n\nwindow.unmountEpam = (containerId: string) => {\n  const elem = document.getElementById(containerId);\n  if (elem) {\n    ReactDOM.unmountComponentAtNode(elem);\n  }\n};\n\nif (!window.isRenderedByContainer) {\n\n  window.renderEpam('root');\n\n}\n"],"sourceRoot":""}